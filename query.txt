-- Common Table Expressions for frequently used subqueries
WITH CurrentApprover AS (
    SELECT DISTINCT
        {Approval}.[RequisitionId] AS RequisitionId
    FROM {Approval}
    LEFT JOIN {Delegation} ON 
        {Approval}.[AssignedUserId] = {Delegation}.[AbsentApprover] AND 
        {Delegation}.[StartDate] <= @CurrDate AND
        {Delegation}.[EndDate] >= @CurrDate AND 
        {Delegation}.[Is_Active] = 1
    INNER JOIN (
        SELECT 
            {Approval}.[RequisitionId] AS ApprRequisitionId, 
            MIN({Approval}.[Level]) AS ApprMinLevel
        FROM {Approval}
        WHERE {Approval}.[ApprovalStatusId] = @ApprovalStatusId_PendingApproval
        GROUP BY {Approval}.[RequisitionId]
    ) AS ApprovalMinLevel ON 
        {Approval}.[RequisitionId] = ApprovalMinLevel.ApprRequisitionId AND 
        {Approval}.[Level] = ApprovalMinLevel.ApprMinLevel
    WHERE 
        {Approval}.[ApprovalStatusId] = @ApprovalStatusId_PendingApproval AND
        (
            @HasApprovalFilter = 1 AND 
            (
                {Delegation}.[SubstituteApprover] IN (@FilterApprovalList) OR 
                {Approval}.[AssignedUserId] IN (@FilterApprovalList)
            )
        )
),

UserPurchasingGroups AS (
    SELECT DISTINCT 
        {PurchasingGroups}.[Id] AS PurchasingGroupId
    FROM {PurchasingGroups}
    LEFT JOIN {PurchasingGroupManager} ON 
        {PurchasingGroups}.[Id] = {PurchasingGroupManager}.[PurchasingGroupId] AND 
        {PurchasingGroupManager}.[IsActive] = 1 
    LEFT JOIN {PurchasingGroupResponsible} ON 
        {PurchasingGroups}.[Id] = {PurchasingGroupResponsible}.[PurchasingGroupId] AND 
        {PurchasingGroupResponsible}.[IsActive] = 1 
    WHERE 
        {PurchasingGroupManager}.[PurchasingGroupManager] = @CurrUserId OR
        {PurchasingGroupResponsible}.[PurchasingGroupResponsible] = @CurrUserId             
),

UserRequisitionApprover AS (
    SELECT DISTINCT
        {Approval}.[RequisitionId] AS RequisitionId
    FROM {Approval}
    LEFT JOIN {Delegation} ON 
        {Approval}.[AssignedUserId] = {Delegation}.[AbsentApprover] AND
        {Delegation}.[StartDate] <= @CurrDate AND
        {Delegation}.[EndDate] >= @CurrDate
    WHERE 
        (
            {Approval}.[AssignedUserId] = @CurrUserId OR
            {Approval}.[CompletedBy] = @CurrUserId OR
            (
                {Delegation}.[SubstituteApprover] = @CurrUserId AND
                {Delegation}.[Is_Active] = 1
            )
        )
)

SELECT DISTINCT
    {Requisition}.[Id] AS RequisitionId,
    {Requisition}.[RequisitionNumber] AS RequisitionNumber,
    {Requisition}.[RequisitionName] AS RequisitionName,
    {Requisition}.[RequisitionStatusId] AS StatusId,
    Status.[Label] AS StatusLabel,
    Status.[StatusColor] AS StatusColor,
    {Requisition}.[CurrencyId] AS Currency,
    Currency.[ExternalId] AS CurrencyCode,
    {Requisition}.[TotalValue] AS TotalValue,
    {CostCenter}.[ExternalId] AS CostCenter,
    InternalOrder_Project.[OrderNumber] AS Project,
    {Requisition}.[RequesterId] AS Requester,
    Requester.[Username] AS RequesterUserName,
    {Requisition}.[CreatedAt] AS CreatedAt,
    CASE 
        WHEN {Requisition}.[RequisitionStatusId] = @RejectedStatusId THEN
            STUFF(
                (
                    SELECT ' | ' + 
                        CASE 
                            WHEN {Order_RejectionReason}.[RejectionReasonId] = @OtherRejectionReason 
                            THEN {ApprovalFlow}.[RejectionReasonDescription]
                            ELSE {RejectionReason}.[Label]
                        END
                    FROM {Order_RejectionReason}
                    INNER JOIN {RejectionReason} ON {RejectionReason}.[Id] = {Order_RejectionReason}.[RejectionReasonId]
                    INNER JOIN {ApprovalFlow} ON {ApprovalFlow}.[RequisitionId] = {Requisition}.[Id]
                    WHERE {Order_RejectionReason}.[RequisitionId] = {Requisition}.[Id]
                    FOR XML PATH ('')
                )   , 1, 3, ''
            ) 
        ELSE '' 
    END AS RejectionMotive,
    0 AS IsDetailOpen

FROM {Requisition}

LEFT JOIN {Currency} Currency ON Currency.[Id] = {Requisition}.[CurrencyId] AND Currency.[Language] = @SAPLanguageCode
LEFT JOIN {User} Requester ON Requester.[Id] = {Requisition}.[RequesterId] 
LEFT JOIN {RequisitionStatus} Status ON Status.[Id] = {Requisition}.[RequisitionStatusId]
LEFT JOIN {CostCenter} ON {Requisition}.[CostCenterId] = {CostCenter}.[Id]
LEFT JOIN {InternalOrder} InternalOrder_Project ON {Requisition}.[ProjectId] = InternalOrder_Project.[Id]
LEFT JOIN {RequisitionArticle} AS Article ON {Requisition}.[Id] = Article.[RequisitionId]

/* CTEs JOINS */
LEFT JOIN CurrentApprover ON {Requisition}.[Id] = CurrentApprover.RequisitionId
LEFT JOIN UserRequisitionApprover ON {Requisition}.[Id] = UserRequisitionApprover.RequisitionId
LEFT JOIN UserPurchasingGroups ON Article.[PurchasingGroupId] = UserPurchasingGroups.PurchasingGroupId

WHERE    
    {Requisition}.[IsDeleted] = 0 AND
    Status.[Id] <> @DraftStatusId AND 
    (
        @SearchKeyword = '' OR 
        (
            {Requisition}.[RequisitionNumber] LIKE '%' + @SearchKeyword + '%' OR
            {Requisition}.[RequisitionName] LIKE '%' + @SearchKeyword + '%' OR
            Requester.[Name] LIKE '%' + @SearchKeyword + '%' OR
            Requester.[Username] LIKE '%' + @SearchKeyword + '%' OR 
            InternalOrder_Project.[OrderNumber] LIKE '%' + @SearchKeyword + '%' OR
            {CostCenter}.[ExternalId] LIKE '%' + @SearchKeyword + '%' 
        )
    ) AND
    (
        (@HasStatusFilter = 0 OR Status.[Id] IN (@FilterStatusList)) AND 
        (@HasSupplierFilter = 0 OR Article.[SupplierId] IN (@FilterSupplierList)) AND 
        (@HasCostCenterFilter = 0 OR {Requisition}.[CostCenterId] IN (@FilterCostCenterList)) AND 
        (@HasProjectFilter = 0 OR {Requisition}.[ProjectId] IN (@FilterProjectList)) AND 
        (@HasCurrencyFilter = 0 OR {Requisition}.[CurrencyId] IN (@FilterCurrencyList)) AND 
        (@FilterMinTotalValueFilter <= {Requisition}.[TotalValue]) AND 
        (@FilterMaxTotalValueFilter >= {Requisition}.[TotalValue]) AND 
        (@HasApprovalFilter = 0 OR CurrentApprover.RequisitionId IS NOT NULL) AND
        (
            @FilterCreatedAtStart = @NullDate OR @FilterCreatedAtEnd = @NullDate OR
            (CONVERT(DATE,{Requisition}.[CreatedAt]) >= @FilterCreatedAtStart AND CONVERT(DATE,{Requisition}.[CreatedAt]) <= @FilterCreatedAtEnd)            
        )
    ) AND
    (
        @HasTotalAccess = 1 OR {Requisition}.[RequesterId] = @CurrUserId OR {Requisition}.[CreatedBy] = @CurrUserId
        OR UserPurchasingGroups.PurchasingGroupId IS NOT NULL
        OR UserRequisitionApprover.RequisitionId IS NOT NULL
    )
    
ORDER BY @SortForSQL
OFFSET @StartIndex ROWS FETCH NEXT @MaxRecords ROWS ONLY